import telebot
import json
import os
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

TOKEN = "7351637070:AAHoIYtqhjmXVFuQXPr946h8Xxdo_ssZJi4"  # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω!
bot = telebot.TeleBot(TOKEN)

waiting_valentine = {}
USER_DATA_FILE = "user_data.json"
ADMIN_IDS = [7292976610]  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ ID)


def load_user_data():
    if os.path.exists(USER_DATA_FILE):
        with open(USER_DATA_FILE, "r") as f:
            try:
                return json.load(f)
            except json.JSONDecodeError:
                return {}
    return {}


def save_user_data(data):
    with open(USER_DATA_FILE, "w") as f:
        json.dump(data, f, indent=4)


user_data = load_user_data()


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.chat.id
    username = message.from_user.username
    args = message.text.split()[1:]

    user_data[user_id] = username
    save_user_data(user_data)

    if args and args[0].isdigit():
        target_user_id = int(args[0])
        waiting_valentine[user_id] = target_user_id
        bot.send_message(user_id, "üíå–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏:\n",
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    else:
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è', callback_data='get_started'))
        bot.send_message(user_id,
                         "ü©∑–ü—Ä–∏–≤–µ—Ç–∏–∫, –≤ —ç—Ç–æ–º –±–æ—Ç–∏–∫–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏üíå\n\n"
                         "–ñ–º–∏ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ‚§µÔ∏è", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    user_id = call.message.chat.id

    if call.data == 'get_started':
        personal_link = f"https://t.me/{bot.get_me().username}?start={user_id}"
        bot.edit_message_text(chat_id=user_id, message_id=call.message.message_id,
                              text=f"üíñ–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫:\n{personal_link}")
    elif call.data == 'send_valentine':
        waiting_valentine[user_id] = call.message.chat.id
        bot.send_message(user_id, "üíå–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏:\n",
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif call.data.startswith("reply_to_"):
        target_user_id = int(call.data.split("_")[-1])
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ—Å–ª–∞–Ω–∏–µ:")
        waiting_valentine[user_id] = target_user_id


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.chat.id

    if user_id in waiting_valentine:
        target_user_id = waiting_valentine[user_id]
        sender_username = user_data.get(user_id)

        if user_id in ADMIN_IDS or target_user_id in ADMIN_IDS:
            from_user = f"@{sender_username}" if sender_username else str(user_id)
            to_user = f"@{user_data.get(target_user_id)}" if user_data.get(target_user_id) else str(target_user_id)
            admin_text = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {from_user} –¥–ª—è {to_user}:\n\n{message.text}"

            for admin_id in ADMIN_IDS:
                try:
                    bot.send_message(admin_id, admin_text)
                except telebot.apihelper.ApiTelegramException as e:
                    if "chat not found" in str(e):
                        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É {admin_id}: —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. "
                                     f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫ ADMIN_IDS. –û—à–∏–±–∫–∞: {e}")
                    else:
                        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            if user_id not in ADMIN_IDS or target_user_id not in ADMIN_IDS:  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∞–¥–º–∏–Ω-–∞–¥–º–∏–Ω—É
                valentine_text = f"üíå–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}"
                keyboard = telebot.types.InlineKeyboardMarkup()
                keyboard.add(telebot.types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'reply_to_{user_id}'))
                bot.send_message(target_user_id, valentine_text, reply_markup=keyboard)

        else:
            valentine_text = f"üíå–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}"
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(telebot.types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'reply_to_{user_id}'))
            bot.send_message(target_user_id, valentine_text, reply_markup=keyboard)

        del waiting_valentine[user_id]
        bot.send_message(user_id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è', callback_data='get_started'))
        bot.send_message(user_id,
                         "ü©∑–ü—Ä–∏–≤–µ—Ç–∏–∫, –≤ —ç—Ç–æ–º –±–æ—Ç–∏–∫–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏üíå\n\n"
                         "–ñ–º–∏ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ‚§µÔ∏è", reply_markup=keyboard)

    else:
        bot.send_message(user_id, "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")


bot.polling(none_stop=True)
